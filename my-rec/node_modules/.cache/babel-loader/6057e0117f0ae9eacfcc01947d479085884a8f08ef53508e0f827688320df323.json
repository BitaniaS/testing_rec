{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bkete\\\\OneDrive\\\\Desktop\\\\IS\\\\testing_rec\\\\my-rec\\\\src\\\\CarouselComponent.js\";\nimport React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Yup validation schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionsSchema = Yup.object().shape({\n  selectedOptions: Yup.array().min(1, 'Please select at least one option').required('Please select at least one option')\n});\n\n// Formik initial values\nconst initialValues = {\n  selectedOptions: []\n};\nconst QuestionCarousel = () => /*#__PURE__*/_jsxDEV(Carousel, {\n  interval: null,\n  indicators: false,\n  controls: true,\n  children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: optionsSchema,\n      onSubmit: values => {\n        // Handle form submission\n        alert(JSON.stringify(values, null, 2));\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"group\",\n          \"aria-labelledby\": \"checkbox-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"selectedOptions\",\n              value: \"Veteran\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), \"Veteran\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"selectedOptions\",\n              value: \"Family of veteran\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), \"Family of veteran\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"selectedOptions\",\n              value: \"International student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), \"International student\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"selectedOptions\",\n              value: \"With disability\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), \"With disability\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), errors.selectedOptions && touched.selectedOptions ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.selectedOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is two\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is three\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n_c = QuestionCarousel;\nexport default QuestionCarousel;\n\n// // src/components/QuestionCarousel.js\n\n// import React , {useState} from 'react';\n// import Carousel from 'react-bootstrap/Carousel'\n// // import { Carousel, Form } from 'react-bootstrap';\n// import  Form   from 'react-bootstrap/Form';\n// import { Formik, Form, Field } from 'formik';\n// import * as Yup from 'yup';\n\n// // Define the initial values for the checkboxes\n// const initialValues = {\n//   selectedOptions: [], // This will store the keys of the selected options in the check box\n// };\n\n// // Define the Yup validation schema\n// const validationSchema = Yup.object().shape({\n//   selectedOptions: Yup.array()\n//     .of(Yup.string())\n//     .min(1, 'You must select at least one option') // Require at least one option to be selected\n//     .required('You must select at least one option'), // Make the selection required\n// });\n\n// // const QuestionCarousel = () => {\n\n// function QuestionCarousel() {\n//   const [index, setIndex] = useState(0);\n\n//   const handleSelect = (selectedIndex, e) => {\n//     setIndex(selectedIndex);\n//   };\n\n//   return (\n//     <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\n//       <Carousel.Item>\n//         <div className=\"carousel-modal\">\n//           <h3>Which of the following best describes you ? </h3>\n//           <Form>\n//             <Form.Group>\n//               <Form.Label>Check all that apply.</Form.Label>\n//               <Form.Check type=\"checkbox\" label=\"Veteran\" />\n//               <Form.Check type=\"checkbox\" label=\"Family of Veteran\" />\n//               <Form.Check type=\"checkbox\" label=\"International Student\" />\n//               <Form.Check type=\"checkbox\" label=\"With Disability\" />\n//             </Form.Group>\n//             <Form.Group>\n//               <Form.Label>Which race do you identify with?</Form.Label>\n//               <Form.Control as=\"select\">\n//                 <option>African American/Black</option>\n//                 <option>White</option>\n//                 <option>Other</option>\n//               </Form.Control>\n//             </Form.Group>\n//           </Form>\n//         </div>\n//       </Carousel.Item>\n\n//       <Carousel.Item>\n//         <div className=\"carousel-modal\">\n//           <h3>This is two</h3>\n//           <p> this is the second slide </p>\n\n//         </div>\n//       </Carousel.Item>\n//       <Carousel.Item>\n//         <div className=\"carousel-modal\">\n//           <h3>This is three</h3>\n\n//         </div>\n//       </Carousel.Item>\n//     </Carousel>\n//   );\n// };\n\n// export default QuestionCarousel;\nvar _c;\n$RefreshReg$(_c, \"QuestionCarousel\");","map":{"version":3,"names":["React","Carousel","Formik","Form","Field","Yup","jsxDEV","_jsxDEV","optionsSchema","object","shape","selectedOptions","array","min","required","initialValues","QuestionCarousel","interval","indicators","controls","children","Item","validationSchema","onSubmit","values","alert","JSON","stringify","errors","touched","role","type","name","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bkete/OneDrive/Desktop/IS/testing_rec/my-rec/src/CarouselComponent.js"],"sourcesContent":["import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Yup validation schema\r\nconst optionsSchema = Yup.object().shape({\r\n  selectedOptions: Yup.array()\r\n    .min(1, 'Please select at least one option')\r\n    .required('Please select at least one option'),\r\n});\r\n\r\n// Formik initial values\r\nconst initialValues = {\r\n  selectedOptions: [],\r\n};\r\n\r\nconst QuestionCarousel = () => (\r\n  <Carousel interval={null} indicators={false} controls={true}>\r\n    <Carousel.Item>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={optionsSchema}\r\n        onSubmit={(values) => {\r\n          // Handle form submission\r\n          alert(JSON.stringify(values, null, 2));\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div role=\"group\" aria-labelledby=\"checkbox-group\">\r\n              {/* List of checkboxes */}\r\n              <label>\r\n                <Field type=\"checkbox\" name=\"selectedOptions\" value=\"Veteran\" />\r\n                Veteran\r\n              </label>\r\n              <label>\r\n                <Field type=\"checkbox\" name=\"selectedOptions\" value=\"Family of veteran\" />\r\n                Family of veteran\r\n              </label>\r\n              <label>\r\n                <Field type=\"checkbox\" name=\"selectedOptions\" value=\"International student\" />\r\n                International student\r\n              </label>\r\n              <label>\r\n                <Field type=\"checkbox\" name=\"selectedOptions\" value=\"With disability\" />\r\n                With disability\r\n              </label>\r\n              {/* Error message */}\r\n              {errors.selectedOptions && touched.selectedOptions ? (\r\n                <div>{errors.selectedOptions}</div>\r\n              ) : null}\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Carousel.Item>\r\n    <Carousel.Item>\r\n      <div>This is two</div>\r\n    </Carousel.Item>\r\n    <Carousel.Item>\r\n      <div>This is three</div>\r\n    </Carousel.Item>\r\n  </Carousel>\r\n);\r\n\r\nexport default QuestionCarousel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/components/QuestionCarousel.js\r\n\r\n// import React , {useState} from 'react';\r\n// import Carousel from 'react-bootstrap/Carousel'\r\n// // import { Carousel, Form } from 'react-bootstrap';\r\n// import  Form   from 'react-bootstrap/Form';\r\n// import { Formik, Form, Field } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// // Define the initial values for the checkboxes\r\n// const initialValues = {\r\n//   selectedOptions: [], // This will store the keys of the selected options in the check box\r\n// };\r\n\r\n// // Define the Yup validation schema\r\n// const validationSchema = Yup.object().shape({\r\n//   selectedOptions: Yup.array()\r\n//     .of(Yup.string())\r\n//     .min(1, 'You must select at least one option') // Require at least one option to be selected\r\n//     .required('You must select at least one option'), // Make the selection required\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n// // const QuestionCarousel = () => {\r\n  \r\n// function QuestionCarousel() {\r\n//   const [index, setIndex] = useState(0);\r\n\r\n//   const handleSelect = (selectedIndex, e) => {\r\n//     setIndex(selectedIndex);\r\n//   };\r\n\r\n//   return (\r\n//     <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n//       <Carousel.Item>\r\n//         <div className=\"carousel-modal\">\r\n//           <h3>Which of the following best describes you ? </h3>\r\n//           <Form>\r\n//             <Form.Group>\r\n//               <Form.Label>Check all that apply.</Form.Label>\r\n//               <Form.Check type=\"checkbox\" label=\"Veteran\" />\r\n//               <Form.Check type=\"checkbox\" label=\"Family of Veteran\" />\r\n//               <Form.Check type=\"checkbox\" label=\"International Student\" />\r\n//               <Form.Check type=\"checkbox\" label=\"With Disability\" />\r\n//             </Form.Group>\r\n//             <Form.Group>\r\n//               <Form.Label>Which race do you identify with?</Form.Label>\r\n//               <Form.Control as=\"select\">\r\n//                 <option>African American/Black</option>\r\n//                 <option>White</option>\r\n//                 <option>Other</option>\r\n//               </Form.Control>\r\n//             </Form.Group>\r\n//           </Form>\r\n//         </div>\r\n//       </Carousel.Item>\r\n\r\n\r\n//       <Carousel.Item>\r\n//         <div className=\"carousel-modal\">\r\n//           <h3>This is two</h3>\r\n//           <p> this is the second slide </p>\r\n         \r\n//         </div>\r\n//       </Carousel.Item>\r\n//       <Carousel.Item>\r\n//         <div className=\"carousel-modal\">\r\n//           <h3>This is three</h3>\r\n         \r\n//         </div>\r\n//       </Carousel.Item>\r\n//     </Carousel>\r\n//   );\r\n// };\r\n\r\n// export default QuestionCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}