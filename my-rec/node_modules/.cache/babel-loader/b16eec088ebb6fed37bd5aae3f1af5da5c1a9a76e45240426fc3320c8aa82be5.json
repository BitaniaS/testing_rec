{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bkete\\\\OneDrive\\\\Desktop\\\\IS\\\\testing_rec\\\\my-rec\\\\src\\\\CarouselComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './CarouselComp.css';\nimport Results from './results';\nimport { Row, Col } from 'react-bootstrap';\n\n// Yup validation schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionsSchema = Yup.object().shape({\n  internationalStudent: Yup.string().required('Please answer this question'),\n  veteranStatus: Yup.string().required('Please answer this question'),\n  incomeBracket: Yup.string().required('Please select your income bracket'),\n  stateOfResidence: Yup.string().required('Please select your state'),\n  expectedContribution: Yup.string().required('Please indicate your expected contribution')\n  // selectedOptions: Yup.array()\n  //   .min(1, 'Please select at least one option')\n  //   .required('Please select at least one option'),\n  //   race: Yup.string()\n  //   .required('Please select your race')\n  //   .notOneOf([''], 'Please select your race'),\n  //   gender: Yup.string()\n  //   .required('Please select your Gender')\n  //   .notOneOf([''], 'Please select your Gender'),\n  //   minPrice: Yup.number()\n  //   .min(0, 'Minimum price must be greater than or equal to 0')\n  //   .required('Minimum price is required'),\n  //   maxPrice: Yup.number()\n  //   .moreThan(Yup.ref('minPrice'), 'Maximum price must be greater than minimum price')\n  //   .required('Maximum price is required'),\n  //   income:Yup.number()\n  //   .required ('Please select an income bracket')\n  //   .notOneOf(['', 'Please select an income bracket']),\n  //   address: Yup.string().required('Address is required'),\n  //   city: Yup.string().required('City is required'),\n  //   zip: Yup.string().matches(/^[0-9]{5}$/, 'Invalid zip code').required('Zip code is required'),\n  //   state: Yup.string().required('State is required'),\n});\n\n// Formik initial values\nconst initialValues = {\n  internationalStudent: '',\n  // 'Yes' or 'No'\n  veteranStatus: '',\n  // 'Yes' or 'No'\n  incomeBracket: '',\n  // Income ranges\n  stateOfResidence: '',\n  // US States\n  expectedContribution: '' // Financial contribution ranges\n  // selectedOptions: [],\n  // race:'',\n  // gender:'',\n  // minPrice:'',\n  // maxPrice:'',\n  // income:'',\n  // address: '',\n  // city: '',\n  // zip: '',\n  // state: '',\n};\n\nconst QuestionCarousel = () => {\n  _s();\n  const [submissionSuccessful, setSubmissionSuccessful] = useState(false);\n  async function sendData(data) {\n    try {\n      const response = await fetch('http://localhost:5000/submit', {\n        method: 'POST',\n        // Specifies that this is a POST request\n        headers: {\n          'Content-Type': 'application/json' // Indicates the content type being sent\n        },\n\n        body: JSON.stringify(data) // Converts the data object to a JSON string\n      });\n\n      if (response.ok) {\n        setSubmissionSuccessful(true);\n        // const recommendations = await response.json();\n        // Now you can set these recommendations to state and display them as needed\n      } else {\n        // Handle errors\n        console.error('Failed to fetch recommendations:', response);\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  }\n  ;\n  if (submissionSuccessful) {\n    console.log('submission successful');\n    // Render Results component if submission was successful\n    return /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    interval: null,\n    indicators: false,\n    controls: true\n    // prevIcon={<i className=\"bi bi-arrow-left-circle-fill\"></i>}\n    // nextIcon={<i className=\"bi bi-arrow-right-circle-fill\"></i>}   \n    ,\n    children: /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: optionsSchema,\n        onSubmit: async (values, actions) => {\n          try {\n            const response = await sendData(values);\n            console.log(response); // Process the response as needed\n            actions.setSubmitting(false); // Set submitting to false after submission\n          } catch (error) {\n            console.error(\"Error sending data: \", error);\n            actions.setSubmitting(false); // Set submitting to false if there's an error\n          }\n        },\n        children: ({\n          errors,\n          touched,\n          handleChange\n        }) =>\n        /*#__PURE__*/\n        // <div>\n        _jsxDEV(Form, {\n          className: \"component-car\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Are you an international student?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"internationalStudent\",\n                value: \"Yes\",\n                className: \"form-check-input\",\n                id: \"internationalStudentYes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"internationalStudentYes\",\n                className: \"form-check-label\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"internationalStudent\",\n                value: \"No\",\n                className: \"form-check-input\",\n                id: \"StudentNo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"internationalStudentNo\",\n                className: \"form-check-label\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Do you have veteran status?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"veteranStatus\",\n                value: \"Yes\",\n                className: \"form-check-input\",\n                id: \"internationalStudentYes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"veteranStatusYes\",\n                className: \"form-check-label\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"veteranStatus\",\n                value: \"No\",\n                className: \"form-check-input\",\n                id: \"StudentNo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"veteranStatusNo\",\n                className: \"form-check-label\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Please select your family's annual income bracket.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                name: \"incomeBracket\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n        // </div>\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionCarousel, \"lk04qFFSXr8Y9Lem43eBRJULP44=\");\n_c = QuestionCarousel;\nexport default QuestionCarousel;\n\n// // src/components/QuestionCarousel.js\n\n// import React , {useState} from 'react';\n// import Carousel from 'react-bootstrap/Carousel'\n// // import { Carousel, Form } from 'react-bootstrap';\n// import  Form   from 'react-bootstrap/Form';\n// import { Formik, Form, Field } from 'formik';\n// import * as Yup from 'yup';\n\n// // Define the initial values for the checkboxes\n// const initialValues = {\n//   selectedOptions: [], // This will store the keys of the selected options in the check box\n// };\n\n// // Define the Yup validation schema\n// const validationSchema = Yup.object().shape({\n//   selectedOptions: Yup.array()\n//     .of(Yup.string())\n//     .min(1, 'You must select at least one option') // Require at least one option to be selected\n//     .required('You must select at least one option'), // Make the selection required\n// });\n\n// // const QuestionCarousel = () => {\n\n// function QuestionCarousel() {\n//   const [index, setIndex] = useState(0);\n\n//   const handleSelect = (selectedIndex, e) => {\n//     setIndex(selectedIndex);\n//   };\n\n//   return (\n//     <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\n//       <Carousel.Item>\n//         <div className=\"carousel-modal\">\n//           <h3>Which of the following best describes you ? </h3>\n//           <Form>\n//             <Form.Group>\n//               <Form.Label>Check all that apply.</Form.Label>\n//               <Form.Check type=\"checkbox\" label=\"Veteran\" />\n//               <Form.Check type=\"checkbox\" label=\"Family of Veteran\" />\n//               <Form.Check type=\"checkbox\" label=\"International Student\" />\n//               <Form.Check type=\"checkbox\" label=\"With Disability\" />\n//             </Form.Group>\n//             <Form.Group>\n//               <Form.Label>Which race do you identify with?</Form.Label>\n//               <Form.Control as=\"select\">\n//                 <option>African American/Black</option>\n//                 <option>White</option>\n//                 <option>Other</option>\n//               </Form.Control>\n//             </Form.Group>\n//           </Form>\n//         </div>\n//       </Carousel.Item>\n\n//       <Carousel.Item>\n//         <div className=\"carousel-modal\">\n//           <h3>This is two</h3>\n//           <p> this is the second slide </p>\n\n//         </div>\n//       </Carousel.Item>\n//       <Carousel.Item>\n//         <div className=\"carousel-modal\">\n//           <h3>This is three</h3>\n\n//         </div>\n//       </Carousel.Item>\n//     </Carousel>\n//   );\n// };\n\n// export default QuestionCarousel;\nvar _c;\n$RefreshReg$(_c, \"QuestionCarousel\");","map":{"version":3,"names":["React","useState","Carousel","Formik","Form","Field","Yup","Results","Row","Col","jsxDEV","_jsxDEV","optionsSchema","object","shape","internationalStudent","string","required","veteranStatus","incomeBracket","stateOfResidence","expectedContribution","initialValues","QuestionCarousel","_s","submissionSuccessful","setSubmissionSuccessful","sendData","data","response","fetch","method","headers","body","JSON","stringify","ok","console","error","log","fileName","_jsxFileName","lineNumber","columnNumber","interval","indicators","controls","children","Item","validationSchema","onSubmit","values","actions","setSubmitting","errors","touched","handleChange","className","type","name","value","id","htmlFor","as","_c","$RefreshReg$"],"sources":["C:/Users/bkete/OneDrive/Desktop/IS/testing_rec/my-rec/src/CarouselComponent.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './CarouselComp.css'\r\nimport Results from './results';\r\nimport {Row,Col } from 'react-bootstrap';\r\n\r\n// Yup validation schema\r\nconst optionsSchema = Yup.object().shape({\r\n  internationalStudent: Yup.string().required('Please answer this question'),\r\n  veteranStatus: Yup.string().required('Please answer this question'),\r\n  incomeBracket: Yup.string().required('Please select your income bracket'),\r\n  stateOfResidence: Yup.string().required('Please select your state'),\r\n  expectedContribution: Yup.string().required('Please indicate your expected contribution'),\r\n  // selectedOptions: Yup.array()\r\n  //   .min(1, 'Please select at least one option')\r\n  //   .required('Please select at least one option'),\r\n  //   race: Yup.string()\r\n  //   .required('Please select your race')\r\n  //   .notOneOf([''], 'Please select your race'),\r\n  //   gender: Yup.string()\r\n  //   .required('Please select your Gender')\r\n  //   .notOneOf([''], 'Please select your Gender'),\r\n  //   minPrice: Yup.number()\r\n  //   .min(0, 'Minimum price must be greater than or equal to 0')\r\n  //   .required('Minimum price is required'),\r\n  //   maxPrice: Yup.number()\r\n  //   .moreThan(Yup.ref('minPrice'), 'Maximum price must be greater than minimum price')\r\n  //   .required('Maximum price is required'),\r\n  //   income:Yup.number()\r\n  //   .required ('Please select an income bracket')\r\n  //   .notOneOf(['', 'Please select an income bracket']),\r\n  //   address: Yup.string().required('Address is required'),\r\n  //   city: Yup.string().required('City is required'),\r\n  //   zip: Yup.string().matches(/^[0-9]{5}$/, 'Invalid zip code').required('Zip code is required'),\r\n  //   state: Yup.string().required('State is required'),\r\n  });\r\n\r\n\r\n\r\n// Formik initial values\r\nconst initialValues = {\r\n  internationalStudent: '',  // 'Yes' or 'No'\r\n  veteranStatus: '',         // 'Yes' or 'No'\r\n  incomeBracket: '',         // Income ranges\r\n  stateOfResidence: '',      // US States\r\n  expectedContribution: '',  // Financial contribution ranges\r\n  // selectedOptions: [],\r\n  // race:'',\r\n  // gender:'',\r\n  // minPrice:'',\r\n  // maxPrice:'',\r\n  // income:'',\r\n  // address: '',\r\n  // city: '',\r\n  // zip: '',\r\n  // state: '',\r\n};\r\n\r\n\r\n\r\n \r\n\r\n\r\nconst QuestionCarousel = () => {\r\n  const [submissionSuccessful, setSubmissionSuccessful] = useState(false);\r\n\r\n  async function sendData(data) {\r\n    try{\r\n    const response = await fetch('http://localhost:5000/submit', {\r\n      method: 'POST', // Specifies that this is a POST request\r\n      headers: {\r\n        'Content-Type': 'application/json', // Indicates the content type being sent\r\n      },\r\n      body: JSON.stringify(data), // Converts the data object to a JSON string\r\n    });\r\n  \r\n    if (response.ok) {\r\n      setSubmissionSuccessful(true);\r\n        // const recommendations = await response.json();\r\n        // Now you can set these recommendations to state and display them as needed\r\n    } else {\r\n        // Handle errors\r\n        console.error('Failed to fetch recommendations:', response);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n  }\r\n  };\r\n\r\n  if (submissionSuccessful) {\r\n    console.log('submission successful')\r\n    // Render Results component if submission was successful\r\n    return <Results /> ;\r\n  }\r\n\r\n  return (\r\n  <Carousel \r\n    interval={null} \r\n    indicators={false} \r\n    controls={true}\r\n    // prevIcon={<i className=\"bi bi-arrow-left-circle-fill\"></i>}\r\n    // nextIcon={<i className=\"bi bi-arrow-right-circle-fill\"></i>}   \r\n  >\r\n\r\n    <Carousel.Item>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={optionsSchema}\r\n        onSubmit={async (values, actions) => {\r\n          try {\r\n            const response = await sendData(values);\r\n            console.log(response); // Process the response as needed\r\n            actions.setSubmitting(false); // Set submitting to false after submission\r\n          } catch (error) {\r\n            console.error(\"Error sending data: \", error);\r\n            actions.setSubmitting(false); // Set submitting to false if there's an error\r\n          }\r\n        }}\r\n        >      \r\n\r\n    \r\n        {({ errors, touched,handleChange }) => (\r\n          // <div>\r\n          <Form className='component-car'>\r\n\r\n        {/* International Student Status */}\r\n          <div className=\"form-group\">\r\n          <label>Are you an international student?</label>\r\n          <div className=\"form-check\">\r\n            <Field type=\"radio\" name=\"internationalStudent\" value=\"Yes\" className=\"form-check-input\" id=\"internationalStudentYes\" />\r\n            <label htmlFor=\"internationalStudentYes\" className=\"form-check-label\">Yes</label>\r\n            \r\n            <Field type=\"radio\" name=\"internationalStudent\" value=\"No\" className=\"form-check-input\" id=\"StudentNo\" />\r\n            <label htmlFor=\"internationalStudentNo\" className=\"form-check-label\">No</label>\r\n          </div>  \r\n          </div>\r\n\r\n        {/* Veteran Status */}\r\n        <div className=\"form-group\">\r\n          <label>Do you have veteran status?</label>\r\n          \r\n\r\n          <div>\r\n          <Field type=\"radio\" name=\"veteranStatus\" value=\"Yes\" className=\"form-check-input\" id=\"internationalStudentYes\" />\r\n            <label htmlFor=\"veteranStatusYes\" className=\"form-check-label\">Yes</label>\r\n            \r\n          <Field type=\"radio\" name=\"veteranStatus\" value=\"No\" className=\"form-check-input\" id=\"StudentNo\" />\r\n            <label htmlFor=\"veteranStatusNo\" className=\"form-check-label\">No</label>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Income Bracket */}\r\n        <div className=\"form-group\">\r\n          <label>Please select your family's annual income bracket.</label>\r\n          <div>\r\n            <Field as=\"select\" name=\"incomeBracket\">\r\n              {/* Options here */}\r\n            </Field>\r\n          </div>\r\n        </div>\r\n         \r\n\r\n          <br></br>\r\n          <button type=\"submit\">Submit</button>                \r\n          </Form>\r\n          // </div>\r\n        )}\r\n      </Formik>\r\n\r\n    </Carousel.Item>\r\n\r\n    {/* <Carousel.Item>\r\n      <div>This is two <br></br> This is four</div>\r\n    </Carousel.Item>\r\n    <Carousel.Item>\r\n      <div>This is three</div>\r\n    </Carousel.Item> */}\r\n  </Carousel>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default QuestionCarousel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/components/QuestionCarousel.js\r\n\r\n// import React , {useState} from 'react';\r\n// import Carousel from 'react-bootstrap/Carousel'\r\n// // import { Carousel, Form } from 'react-bootstrap';\r\n// import  Form   from 'react-bootstrap/Form';\r\n// import { Formik, Form, Field } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// // Define the initial values for the checkboxes\r\n// const initialValues = {\r\n//   selectedOptions: [], // This will store the keys of the selected options in the check box\r\n// };\r\n\r\n// // Define the Yup validation schema\r\n// const validationSchema = Yup.object().shape({\r\n//   selectedOptions: Yup.array()\r\n//     .of(Yup.string())\r\n//     .min(1, 'You must select at least one option') // Require at least one option to be selected\r\n//     .required('You must select at least one option'), // Make the selection required\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n// // const QuestionCarousel = () => {\r\n  \r\n// function QuestionCarousel() {\r\n//   const [index, setIndex] = useState(0);\r\n\r\n//   const handleSelect = (selectedIndex, e) => {\r\n//     setIndex(selectedIndex);\r\n//   };\r\n\r\n//   return (\r\n//     <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n//       <Carousel.Item>\r\n//         <div className=\"carousel-modal\">\r\n//           <h3>Which of the following best describes you ? </h3>\r\n//           <Form>\r\n//             <Form.Group>\r\n//               <Form.Label>Check all that apply.</Form.Label>\r\n//               <Form.Check type=\"checkbox\" label=\"Veteran\" />\r\n//               <Form.Check type=\"checkbox\" label=\"Family of Veteran\" />\r\n//               <Form.Check type=\"checkbox\" label=\"International Student\" />\r\n//               <Form.Check type=\"checkbox\" label=\"With Disability\" />\r\n//             </Form.Group>\r\n//             <Form.Group>\r\n//               <Form.Label>Which race do you identify with?</Form.Label>\r\n//               <Form.Control as=\"select\">\r\n//                 <option>African American/Black</option>\r\n//                 <option>White</option>\r\n//                 <option>Other</option>\r\n//               </Form.Control>\r\n//             </Form.Group>\r\n//           </Form>\r\n//         </div>\r\n//       </Carousel.Item>\r\n\r\n\r\n//       <Carousel.Item>\r\n//         <div className=\"carousel-modal\">\r\n//           <h3>This is two</h3>\r\n//           <p> this is the second slide </p>\r\n         \r\n//         </div>\r\n//       </Carousel.Item>\r\n//       <Carousel.Item>\r\n//         <div className=\"carousel-modal\">\r\n//           <h3>This is three</h3>\r\n         \r\n//         </div>\r\n//       </Carousel.Item>\r\n//     </Carousel>\r\n//   );\r\n// };\r\n\r\n// export default QuestionCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}